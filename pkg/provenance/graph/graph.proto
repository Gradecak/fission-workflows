syntax = "proto3";

package fission.workflows.provenance;
option go_package = "graph";

// Graph structure for boradcasting provenance data, it is up to the reciever or
// a middleware layer to decode the message into a particular graph format
message Node {
    enum Type {
        UNDEF    = 0;
        WORKFLOW = 1;
        ENTITY   = 2;
        TASK     = 3;
    }
    enum Op {
        NOP       = 0;
        TRANSFORM = 1;
        READ      = 2;
        WRITE     = 3;
        CONTROL   = 4;
    }
    Type type     = 1;
    Op op         = 2;

    string meta   = 3;
    string fnName = 4;
    string task   = 5;
}

message IDs {
    repeated int64 ids = 1;
}

message Provenance {
    map<int64, Node> nodes         = 1;
    map<int64, IDs> wfTasks        = 2;
    map<int64, IDs> wfPredecessors = 3;
    map<string, int64> executed    = 4;
}
